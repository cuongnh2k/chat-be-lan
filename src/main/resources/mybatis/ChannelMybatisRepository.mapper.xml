<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ChannelMybatisRepository">

    <select id="countListChannel" parameterType="website.chatx.dto.prt.channel.GetListChannelPrt"
            resultType="java.lang.Integer">
        /* ChannelMybatisRepository.countListChannel */
        select count(1)
        from channel c1
                 join user_channel uc1 on (c1.id = uc1.channel_id and uc1.user_id = #{userId})
    </select>

    <select id="getListChannel" parameterType="website.chatx.dto.prt.channel.GetListChannelPrt"
            resultType="website.chatx.dto.rss.channel.ListChannelRss">
        /* ChannelMybatisRepository.getListChannel */
        select c1.id         id,
               c1.name       name,
               c1.avatar_url avatarUrl,
               c1.type       type,

               u1.id         friendId,
               u1.email      friendEmail,
               u1.name       friendName,
               u1.avatar_url friendAvatarUrl,

               m1.id         currentMessageId,
               m1.content    currentMessageContent,

               u2.id         senderCurrentMessageId,
               u2.email      senderCurrentMessageEmail,
               u2.name       senderCurrentMessageName,
               u2.avatar_url senderCurrentMessageAvatarUrl
        from channel c1
                 join user_channel uc1 on (c1.id = uc1.channel_id and uc1.user_id = #{userId})
                 left join user_channel uc2
                           on (c1.id = uc2.channel_id and c1.type = 'FRIEND' and uc2.user_id != #{userId})
                 left join user u1 on (uc2.user_id = u1.id)
                 left join message m1
                           on (c1.id = m1.channel_id and m1.id = (select m2.id
                                                                  from channel c2
                                                                           join message m2 on (c2.id = m2.channel_id and c2.id = c1.id)
                                                                  order by m2.created_at desc limit 1) )
        left join user u2
        on (m1.sender_id = u2.id)
        order by m1.created_at desc
            limit #{offset}, #{limit}
    </select>

</mapper>
